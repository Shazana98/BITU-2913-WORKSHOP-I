/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import database.MySqlDatabase;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import java.util.ArrayList;
import model.BookingAppointment;

/**
 *
 * @author Shazana Affandi
 */
public class BookingForm extends javax.swing.JFrame {

    /**
     * Creates new form BookingForm
     */
    public BookingForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        updateCombo();
        show_booking();
    }

    public ArrayList<BookingAppointment> bookingList()
    {
        ArrayList<BookingAppointment> bookingsList = new ArrayList<>();
        Connection conn = MySqlDatabase.ConnectDB();
        String query = "SELECT * FROM booking_table";
        try {
        PreparedStatement ps = conn.prepareStatement(query);
        ResultSet rs = ps.executeQuery(query);
        
        BookingAppointment bookingAppointment;
        while(rs.next())
        {
            bookingAppointment = new BookingAppointment(rs.getString ("bookingNum"), rs.getString ("patientID"), rs.getString ("patientName"), rs.getString ("date"), rs.getString ("time"), rs.getString ("dentistID"), rs.getString ("dentistName"));
            bookingsList.add(bookingAppointment);
        }
        }catch(Exception e)
         {
           JOptionPane.showMessageDialog(null, e);
         }
        return bookingsList;
    }
    
    public void show_booking()
    {
        ArrayList<BookingAppointment> list = bookingList();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        Object[] row = new Object[11];
        for(int i=0; i<list.size(); i++)
        {
            row[0] = list.get(i).getBookingNum();
            row[1] = list.get(i).getPatientID();
            row[2] = list.get(i).getPatientName();
            row[3] = list.get(i).getDate();
            row[4] = list.get(i).getTime();
            row[5] = list.get(i).getDentistID();
            row[6] = list.get(i).getDentistName();
            model.addRow(row);   
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlblTitle = new javax.swing.JLabel();
        jlblPatientID = new javax.swing.JLabel();
        jlblPatientsName = new javax.swing.JLabel();
        jlblDate = new javax.swing.JLabel();
        jlblTime = new javax.swing.JLabel();
        jlblDentistID = new javax.swing.JLabel();
        jlblDentist = new javax.swing.JLabel();
        jtxtDate = new javax.swing.JTextField();
        jtxtTime = new javax.swing.JTextField();
        jbtnBack = new javax.swing.JButton();
        jbtnInsert = new javax.swing.JButton();
        jlblBookingNum = new javax.swing.JLabel();
        jtxtBookingNum = new javax.swing.JTextField();
        jbtnUpdate = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jCmbBoxPatID = new javax.swing.JComboBox<>();
        jCmbBoxDenID = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCmbBoxPatName = new javax.swing.JComboBox<>();
        jCmbBoxDenName = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jlblTitle.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 48)); // NOI18N
        jlblTitle.setForeground(new java.awt.Color(0, 51, 102));
        jlblTitle.setText("Booking Appointment");

        jlblPatientID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblPatientID.setText("Patient's ID");

        jlblPatientsName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblPatientsName.setText("Patient's Name");

        jlblDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblDate.setText("Date");

        jlblTime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblTime.setText("Time");

        jlblDentistID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblDentistID.setText("Dentist's ID");

        jlblDentist.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblDentist.setText("Dentist Name");

        jtxtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtDateActionPerformed(evt);
            }
        });

        jtxtTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtTimeActionPerformed(evt);
            }
        });

        jbtnBack.setBackground(new java.awt.Color(0, 0, 153));
        jbtnBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtnBack.setForeground(new java.awt.Color(255, 255, 255));
        jbtnBack.setText("BACK");
        jbtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBackActionPerformed(evt);
            }
        });

        jbtnInsert.setBackground(new java.awt.Color(255, 255, 255));
        jbtnInsert.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtnInsert.setText("INSERT");
        jbtnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInsertActionPerformed(evt);
            }
        });

        jlblBookingNum.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlblBookingNum.setText("Booking Number");

        jtxtBookingNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtBookingNumActionPerformed(evt);
            }
        });

        jbtnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtnUpdate.setText("UPDATE");
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });

        jbtnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbtnDelete.setText("DELETE ");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        jCmbBoxPatID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jCmbBoxDenID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("(eg: 1)");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setText("(yyyy/mm/dd)");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setText("(eg: HH:MM:SS)");

        jCmbBoxPatName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jCmbBoxDenName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "bookingNum", "patientID", "patientName", "date", "time", "dentistID", "dentistName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 474, Short.MAX_VALUE)
                .addComponent(jlblTitle)
                .addGap(390, 390, 390))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jlblBookingNum)
                        .addComponent(jlblPatientID)
                        .addComponent(jlblPatientsName)
                        .addComponent(jlblDate)
                        .addComponent(jlblTime)
                        .addComponent(jlblDentistID)
                        .addComponent(jlblDentist))
                    .addComponent(jbtnInsert))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jCmbBoxDenID, javax.swing.GroupLayout.Alignment.LEADING, 0, 150, Short.MAX_VALUE)
                                    .addComponent(jtxtTime, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtDate, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jCmbBoxPatName, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jCmbBoxPatID, javax.swing.GroupLayout.Alignment.LEADING, 0, 150, Short.MAX_VALUE)
                                        .addComponent(jtxtBookingNum, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel1)))
                            .addComponent(jCmbBoxDenName, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jbtnUpdate)
                        .addGap(36, 36, 36)
                        .addComponent(jbtnDelete)
                        .addGap(34, 34, 34)
                        .addComponent(jbtnBack)))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 859, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jlblTitle)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblBookingNum)
                            .addComponent(jtxtBookingNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblPatientID)
                            .addComponent(jCmbBoxPatID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblPatientsName)
                            .addComponent(jCmbBoxPatName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblDate)
                            .addComponent(jtxtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblTime)
                            .addComponent(jtxtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCmbBoxDenID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlblDentistID))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlblDentist)
                                    .addComponent(jCmbBoxDenName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jbtnBack)
                                    .addComponent(jbtnDelete)
                                    .addComponent(jbtnUpdate)
                                    .addComponent(jbtnInsert)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(234, 234, 234))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtDateActionPerformed
        jtxtDate.setText(null);
    }//GEN-LAST:event_jtxtDateActionPerformed

    private void jtxtTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtTimeActionPerformed
        jtxtTime.setText(null);
    }//GEN-LAST:event_jtxtTimeActionPerformed

    private void jbtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBackActionPerformed
        NursePage nursePage = new NursePage();
        nursePage.setVisible(true);
        dispose();
    }//GEN-LAST:event_jbtnBackActionPerformed

    private void jbtnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInsertActionPerformed
        Connection conn = MySqlDatabase.ConnectDB();
        String query = "INSERT INTO booking_table(bookingNum, patientID, patientName, date, time, dentistID, dentistName)" + "values(?,?,?,?,?,?,?)";
        try{
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, jtxtBookingNum.getText());
            ps.setString(2, (String) jCmbBoxPatID.getSelectedItem());
            ps.setString(3, (String) jCmbBoxPatName.getSelectedItem());
            ps.setString(4, jtxtDate.getText());
            ps.setString(5, jtxtTime.getText());
            ps.setString(6, (String) jCmbBoxDenID.getSelectedItem());
            ps.setString(7, (String) jCmbBoxDenName.getSelectedItem());

            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data successfully insert!");
            
            BookingForm bookingForm = new BookingForm();
            bookingForm.setVisible(true);
            dispose();
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jbtnInsertActionPerformed

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        if(jtxtBookingNum.getText() != null)
        {
            String UpdateQuery = null;
            PreparedStatement ps = null;
            Connection conn = MySqlDatabase.ConnectDB();
            
            try
            {
                UpdateQuery = "UPDATE booking_table SET patientID = ?, patientName = ?, date = ?, time = ?, dentistID = ?, dentistName = ? WHERE bookingNum = ?";
                ps = conn.prepareStatement(UpdateQuery);
                ps.setString(1, (String) jCmbBoxPatID.getSelectedItem());
                ps.setString(2, (String) jCmbBoxPatName.getSelectedItem());
                ps.setString(3, jtxtDate.getText());
                ps.setString(4, jtxtTime.getText());
                ps.setString(5, (String) jCmbBoxDenID.getSelectedItem());
                ps.setString(6, (String) jCmbBoxDenName.getSelectedItem());
            
                ps.setString(7, jtxtBookingNum.getText());
                ps.executeUpdate();
            
                JOptionPane.showMessageDialog(null, "Data Successfully Updated");
            
                BookingForm bookingForm = new BookingForm();
                bookingForm.setVisible(true);
                dispose();
            }catch(Exception e)
             {
                JOptionPane.showMessageDialog(null, e);
             }
        }
    }//GEN-LAST:event_jbtnUpdateActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        Connection conn = MySqlDatabase.ConnectDB();
        String query = "DELETE FROM booking_table WHERE bookingNum = ?";
        try{
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, jtxtBookingNum.getText());
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Data Successfully Deleted");
            
            BookingForm bookingForm = new BookingForm();
            bookingForm.setVisible(true);
            dispose();
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       int i = jTable1.getSelectedRow();
       TableModel model = jTable1.getModel();
        
       jtxtBookingNum.setText(model.getValueAt(i,0).toString());
       jCmbBoxPatID.setSelectedItem(model.getValueAt(i,1).toString());
       jCmbBoxPatName.setSelectedItem(model.getValueAt(i,2).toString());
       jtxtDate.setText(model.getValueAt(i,3).toString());
       jtxtTime.setText(model.getValueAt(i,4).toString());
       jCmbBoxDenID.setSelectedItem(model.getValueAt(i,5).toString());
       jCmbBoxDenName.setSelectedItem(model.getValueAt(i,6).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jtxtBookingNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtBookingNumActionPerformed
        jtxtBookingNum.setText(null);
    }//GEN-LAST:event_jtxtBookingNumActionPerformed

    private void updateCombo() {
        Connection conn = MySqlDatabase.ConnectDB();
        String query = "SELECT * FROM patient_table";
        try{
            PreparedStatement ps = conn.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next())
            {
                jCmbBoxPatID.addItem(rs.getString("patientID"));
            }
        }catch(Exception e)
        {
           JOptionPane.showMessageDialog(null, e);
        }
        
        String query2 = "SELECT * FROM staff_table";
        try{
            PreparedStatement ps = conn.prepareStatement(query2);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next())
            {
                jCmbBoxDenID.addItem(rs.getString("staffID"));
            }
        }catch(Exception e)
        {
           JOptionPane.showMessageDialog(null, e);
        }
        
        String query3 = "SELECT * FROM patient_table";
        try{
            PreparedStatement ps = conn.prepareStatement(query3);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next())
            {
                jCmbBoxPatName.addItem(rs.getString("patientName"));
            }
        }catch(Exception e)
        {
           JOptionPane.showMessageDialog(null, e);
        }
        
        String query4 = "SELECT * FROM staff_table";
        try{
            PreparedStatement ps = conn.prepareStatement(query4);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next())
            {
                jCmbBoxDenName.addItem(rs.getString("Name"));
            }
        }catch(Exception e)
        {
           JOptionPane.showMessageDialog(null, e);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jCmbBoxDenID;
    private javax.swing.JComboBox<String> jCmbBoxDenName;
    private javax.swing.JComboBox<String> jCmbBoxPatID;
    private javax.swing.JComboBox<String> jCmbBoxPatName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtnBack;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnInsert;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JLabel jlblBookingNum;
    private javax.swing.JLabel jlblDate;
    private javax.swing.JLabel jlblDentist;
    private javax.swing.JLabel jlblDentistID;
    private javax.swing.JLabel jlblPatientID;
    private javax.swing.JLabel jlblPatientsName;
    private javax.swing.JLabel jlblTime;
    private javax.swing.JLabel jlblTitle;
    private javax.swing.JTextField jtxtBookingNum;
    private javax.swing.JTextField jtxtDate;
    private javax.swing.JTextField jtxtTime;
    // End of variables declaration//GEN-END:variables
}
